Avremo un client C1 che naviga in rete "ignaro" di quanto stiamo per fare.
C2 opera da collettore per le statistiche netflow esportate dalla middlebox che utilizziamo,
funziona sia con uno switch che con un router virtuale.

Configurazione di rete
 __________________________________
|                                 _|
|C1----(lab)----R----(bridge)----|_|<-NIC
|                                 ||
|               C2----(bridge)----||
|_Host OS__________________________|

///////////////////////////////////////////////////////////////////////////////
    CONFIG MIDDLEBOX
///////////////////////////////////////////////////////////////////////////////

Si comincia tirando su il router come al solito, quindi abilitando forward ip tra le porte e natting.(Controllare che i client C1 e C2 abbiano i file /etc/netplan/00-installer-config.yaml ben impostati, io avevo il C1 con una interfaccia di troppo nel file che dava problemi).

Se si usa la macchina debian ISN c'è da controllare se le porte si configurano con i doppi indirizzi, nel caso usare:
    sudo service networking restart
Per riavviare tutto e dovrebbe buttare via le doppie config, altrimenti uso dhclient -r e -v

Si installa il pacchetto iptables-netflow-dkms con il comando:
    
    sudo apt install iptables-netflow-dkms

netflow dkms serve a generare le statische netflow, si carica con il comando:

Si passa all'utente root(forse non serve ma ho fatto cosi e funziona):
    sudo su -

Si specificano delle opzioni prima di caricare il modulo:
    echo options modprobe ipt_NETFLOW destination=<Ip del collettore>:2055 <protocol=9 natevents=1 > /etc/modprobe.d/netflow.conf> 

il comando, oltre a caricare il modulo, serve a specificare quale sia il collettore che riceverà i dati netflow. 
Quello che è tra <> alla fine sono comandi opzionali non visti in laboratorio ma che ho trovato online, teoricamente non sono necessari ma andrebbe controllato

Dopo aver definito le options, si carica il modulo:
    modprobe ipt_NETFLOW

Posso poi verificare se tutto è andato a buon fine con:
    sysctl -a | grep net.netflow
    sysctl net.netflow
    cat /proc/net/stat/ipt_netflow
    netstat -anpl | grep 2055

le line sysctl servono a capire con quali impostazioni è stato caricato il modulo,
il file /proc/net/stat/ipt_netflow mostra i flussi provenienti dalla Middlebox(se si lancia a questo punto dovrebbe essere vuoto se non si è toccato il client C1).
il comando netstat ci dice se la connessione col collettore è andata a buon fine, dovremmo vedere ESTABLISHED

Per inviare traffico al collettore Netflow devo creare regole specifiche:
	
    iptables -I FORWARD -j NETFLOW
    iptables -I INPUT -j NETFLOW
    iptables -I OUTPUT -j NETFLOW

è importante mettere queste regole in cima alle catene per far si che i pacchetti sono siano intercettati da regole precedenti, specificando che
si vuol mettere la regola in posizione 1 come segue:

    iptables -I FORWARD 1 -j NETFLOW

Con queste 3 regole praticamente posso vedere tutti i flussi che passano per la middlebox

///////////////////////////////////////////////////////////////////////////////
    CONFIG COLLETTORE
///////////////////////////////////////////////////////////////////////////////

Installare il pacchetto net-tools, tramite il comando: 
    sudo apt install net-tools

Poi lanciare il comando:
    sudo netstat -n --udp --listen 

Verifico se il collettore è in ascolto, devo capire se la porta 2055 che intendo utilizzare per l'esportazione del traffico è disponibile

A questo punto dovrebbe essere tutto collegato, la middlebox esporta le statistiche netflow e il collettore le elabora

Per vedere cosa arriva al collettore posso lanciare il comando:

    tcpdump port 2055 -e -n

Catturo direttamente cosa arriva alla porta specificata, se vedo arrivare qualcosa vuol dire che sta funzionando.
I comandi che seguono servono a fare qualcosa di più sofisticato

Altrimenti si vanno a vedere alcuni file:
    cd /var/cache/nfdump/
    ls 

si dovrebbero vedere dei file del tipo nfcapd.<timestamp>
Utilizziamo dei comandi ricorsivi del tipo: 
    nfdump -R /var/cache/nfdump/
che guadando tutto dentro alla directory

Si possono specificare alcune flag per il filtraggio, ad esempio:
    -A aggrega i dati
    -O ordina i dati in base a quello che specifichiamo, -O start ordina i flussi in base all'indirizzo

oppure posso specificare condizioni come: 
    'proto tcp and dst port 443'
    -A srcip 'host 8.8.8.8'

Se voglio salvare in un file i vari filtraggi che vado a definire devo aggiungere alla fine dei comandi visti sopra: 
    >> /home/studente/file.txt


///////////////////////////////////////////////////////////////////////////////
    APPUNTI DEL PROFESSORE
///////////////////////////////////////////////////////////////////////////////

Per installare il modulo di iptables che permette di esportare le statistiche del traffico in formato NetFlow è consigliabile prima aggiornare l’elenco dei package:

    sudo apt update

poi istallare il modulo vero e proprio con il comando:

    sudo apt install iptables-netflow-dkms

Questo comando istalla un modulo del kernel, ipt_NETFLOW, che poi va caricato manualmente tramite il comando

    sudo modprobe ipt_NETFLOW destination=<IP>:<porta>

dove <IP> rappresenta l’indirizzo IP del collettore di statistiche e <porta> la porta di strato 4 su cui il collettore è in ascolto. La configurazione di default prevede l’uso della porta 2055. La versione di NetFlow utilizzata è la v5. Per cambiare versione o aggiungere altre opzioni, tipo l’esportazione orientata ai nodi che agiscono da NAT, si può usare la versione v9 o ipfix:

    sudo modprobe ipt_NETFLOW destination=<IP>:<porta> protocol=9 natevents=1

Per configurazioni più avanzate, una trattazione dettagliata è disponibile alla pagina https://github.com/aabc/ipt-netflow.

Una volta che il modulo del kernel è stato caricato, è necessario usare iptables per indicare di quale traffico si vogliono esportare le statistiche. Per far questo è necessaria una regola della tabella mangle. Ad esempio, se si vuole tracciare tutto il traffico che attraversa il nodo che risponde ai criteri elencati in <matching-criteria>, il comando da dare è il seguente

    sudo iptables -I FORWARD <matching-criteria> -j NETFLOW

Si consiglia di mettere tale regola al primo posto (-I FORWARD) in modo tale da intercettare tutto il traffico, anche quello che poi potrà subire modifiche a causa di altre regole seguenti.

Le statistiche di utilizzo di NetFlow sono disponibili nel file:

    /proc/net/stat/ipt_netflow

mentre le statistiche relative ai flussi sono disponibili nel file:

    /proc/net/stat/ipt_netflow_flows

Tali file possono essere facilmente ispezionati con il comando

    cat <nome-file>

Per istallare il collettore delle statistiche, prima di tutto è necessario scegliere il nodo. Può essere lo stesso nodo oppure può essere un nodo esterno, anche remoto. Sul nodo scelto, aggiornare prima la lista dei package e poi installare il pacchetto nfdump

    sudo apt install nfdump

Il pacchetto nfdump contiene 2 moduli, nfcapd, che è il vero e proprio collettore, e nfdump.

Il collettore nfcapd ascolta di default sulla porta 2055. Si può verificare che effettivamente la porta è aperta attraverso netstat o nmap:

    netstat -n –udp --listen

Per configurare il servizio in modo diverso, è possibile editare il file

    /lib/systemd/system/nfdump.service

Prima però è necessario abilitare il servizio e stopparlo:

    sudo systemctl enable nfdump.service

    sudo systemctl stop nfdump.service

Una volta fatte le modifiche, è possibile riavviare il demone del servizio

    sudo systemctl daemon-reload

    sudo systemctl start nfdump.service

I dati ricevuti sono disponibili in formato binario nella cartella /var/cache/nfdump.

È possibile consultare i log in /var/log/syslog

    tail -100 /var/log/syslog |grep nfcapd

Per ispezionare i dati relativi ai flussi in formato non binario, è necessario usare nfdump:

    nfdump -R /var/cache/nfdump

Per ordine in base al tempo di inizio del flusso:

    -O start

Aggregare i flussi in modo bidirezionale:

    -B

Scrivere l’output su un file csv per esportare i dati

    -o csv

Per ispezionare un file specifico

    nfdump -r /var/cache/nfdump/nfcapd.<stringa-data>

L’opzione -I permette di avere delle statistiche cumulative e non per flusso

    nfdump -I -r /var/cache/nfdump/nfcapd.<stringa-data>

Con l’opzione -R + nome file si vedono tutti i file a partire da quello indicato tranne quello che viene scritto al momento (nfcapd.current.<number>)

    nfdump -R /var/cache/nfdump/nfcapd.<stringa-data>

E’ possibile usare filtri stile tcpdump per fare analisi del traffico più mirata tra apici singoli (‘ filtro ‘)

    nfdump -r /var/cache/nfdump/nfcapd.<stringa-data>  ‘host 6.6.6.6 and proto tcp and dst port 443’

Con l’opzione -o extended è possibile aggiungere colonne con statistiche relative ai bps, con -n x è possibile visualizzare i top x secondo la metrica specificata da -O (ad esempio bps o bytes o bpp)

    nfdump -r /var/cache/nfdump/nfcapd.<stringa-data> -n 10 -O bps -o extended

L’opzione -A permette di aggregare i flussi su base filtro

    nfdump -r /var/cache/nfdump/nfcapd.<stringa-data> -A srcip ‘host 8.8.4.4’ #aggrega per indirizzi ip, fa vedere i flussi in entrambe le direzioni

Per visualizzare le statistiche relative ai flussi che utilizzano la porta 443 relative sia a bps sia per indirizzo mittente sia per indirizzo destinatario si può usare il comando

    nfdump -r /var/cache/nfdump/nfcapd.<stringa-data> -s srcip/bps -s dstip/bps ‘port 443’

Per anonimizzare il traffic prima dell’esportazione, generare una chiave da 32 caratteri ed usare il comando

    nfanon -K <chiave> -r /var/cache/nfdump/nfcapd.<stringa-data>

Per filtrare in base alla fascia oraria usar e l’opzione -t

    nfdump -r /var/cache/nfdump/nfcapd.<stringa-data> -t <tempo-inizio>-<tempo-fine> ‘ filtro ‘

dove <tempo-inizio> è del tipo 2022/10/27/08:43:21